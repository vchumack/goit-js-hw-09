{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAmD/B,SAASI,EAAiBC,EAAeC,GAZzC,IAAuBC,EAAUC,GAAVD,EAaPF,EAbiBG,EAaFF,EAZtB,IAAIG,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,uBAAwCI,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEpDG,EAAK,sBAAuCG,OAAfP,EAAS,QAAYO,OAANN,EAAM,WAQrDO,MAAK,SAAAC,GACJrB,EAAAsB,OAAOC,QAAQF,MAEhBG,OAAM,SAAAC,GACLzB,EAAAsB,OAAOI,QAAQD,MAtDrBvB,EAAKM,KAAKmB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAuBC,OAAO7B,EAAKC,WAAW6B,OAC9CC,EAAiBF,OAAO7B,EAAKI,UAAU0B,OACvCE,EAAmBH,OAAO7B,EAAKK,YAAYyB,OACjDG,QAAQC,IAAI,uBAAwBN,GACpCK,QAAQC,IAAI,iBAAkBH,GAC9BE,QAAQC,IAAI,mBAAoBF,GAEhC,IAAIvB,EAAUmB,EAEVpB,EAAgB,EAEpB2B,YAAW,WACT5B,EAAiBC,EAAeC,GAEhCD,GAAiB,EACjBC,GAAWsB,EAEX,IAAMK,EAAUC,aAAY,WAC1B9B,EAAiBC,EAAeC,GAGhCA,GAAWsB,GADXvB,GAAiB,KAIKwB,EAAmB,GACvCM,cAAcF,KAEfL,KACFH,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const inputFirstDelayValue = Number(refs.inputDelay.value);\n  const inputStepValue = Number(refs.inputStep.value);\n  const inputAmountValue = Number(refs.inputAmount.value);\n  console.log('inputFirstDelayValue', inputFirstDelayValue);\n  console.log('inputStepValue', inputStepValue);\n  console.log('inputAmountValue', inputAmountValue);\n\n  let countMs = inputFirstDelayValue;\n\n  let countPromises = 1;\n\n  setTimeout(() => {\n    handlingPromises(countPromises, countMs);\n\n    countPromises += 1;\n    countMs += inputStepValue;\n\n    const timerId = setInterval(() => {\n      handlingPromises(countPromises, countMs);\n\n      countPromises += 1;\n      countMs += inputStepValue;\n\n      //? можно и нужно ли это как-то пофиксить?\n      if (countPromises === inputAmountValue + 1) {\n        clearInterval(timerId);\n      }\n    }, inputStepValue);\n  }, inputFirstDelayValue);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\n//? можно ли так называть параметры ?\nfunction handlingPromises(countPromises, countMs) {\n  createPromise(countPromises, countMs)\n    .then(result => {\n      Notify.success(result);\n    })\n    .catch(error => {\n      Notify.failure(error);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","form","$ce04d3a99e08e73b$var$handlingPromises","countPromises","countMs","position","delay","Promise","resolve","reject","Math","random","concat","then","result","Notify","success","catch","error","failure","addEventListener","event","preventDefault","inputFirstDelayValue","Number","value","inputStepValue","inputAmountValue","console","log","setTimeout","timerId","setInterval","clearInterval"],"version":3,"file":"03-promises.a5065704.js.map"}